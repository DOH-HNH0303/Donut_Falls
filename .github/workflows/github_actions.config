process {
	maxForks = 1

	withName:bandage{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:busco{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:bwa{
		cpus=3
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:circulocov{
		cpus=3
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:copy{
		cpus=2
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:dnaapler{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:fastp{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:flye{
		cpus=3
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:gfastats{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:gfa_to_fasta{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:medaka{
		cpus=3
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:multiqc{
		cpus=3
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:nanoplot_summary{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:nanoplot{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:polypolish{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:pypolca{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:rasusa{
		cpus=2
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:raven{
		cpus=3
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:summary{
		cpus=2
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:unicycler{
		cpus=3
		memory = { 6.GB * task.attempt }
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:versions{
		cpus=2
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:test_unicycler{
		cpus=2
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:test_donut_falls{
		cpus=2
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
}